# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: 'ubuntu-20.04'
  demands:
  - npm #gerenciador de pacotes para Node.js - javaScript. é instalado no pc kd instalo Node.js.


variables: #para ref a estas variaveis faço $()
  buildConfiguration: 'Release' #espcifica a conf do build
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot' #esp o caminho para o diretorio
  dotnetSdkVersion: '5.x' #esp a versão do .NET SDK a ser usada

steps: #posso ver as build tasks que estao mapeadas para cada comando de script
- task: UseDotNet@2
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
   version: '$(dotnetSdkVersion)'

- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

-- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)' #executa o node-Sass para converter arquivos Sass em CSS. Para obter o caminho para o diretório wwwroot , ele faz referência à wwwrootDirvariável.
   displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
   workingDirectory: $(wwwrootDir)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration $(buildConfiguration)'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - $(buildConfiguration)'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()